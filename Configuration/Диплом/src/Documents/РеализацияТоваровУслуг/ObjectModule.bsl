
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//{ВКМ_Отчет_Анализ выставленных актов - необходимо указать фактическую сумму
	//по номенклатуре из константы НоменклатураРаботыСпециалиста, которая была выставлена в текущем месяце
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл 
		Если ТекСтрокаУслуги.Номенклатура = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить() Тогда 
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Договор = Договор;
			Движение.Клиент = Контрагент;
			Движение.Регистратор = Ссылка;
			Движение.СуммаКОплате =ТекСтрокаУслуги.Сумма;
		КонецЕсли;
	КонецЦикла;
   //}
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьАвтозаполнение() Экспорт
	
	//{ВКМ_ процедура ВыполнитьАвтозаполнение, которая:
	//получит номенклатуру из констант НоменклатураАбонентскаяПлата и НоменклатураРаботыСпециалиста, 
	//если хотя бы одна не заполнена, необходимо выдать ошибку и прекратить выполнение процедуры,

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Ссылка = &ДоговорСсылка";
	//Запрос.УстановитьПараметр("ДоговорСсылка", Договор.Ссылка);
	Запрос.УстановитьПараметр("ДоговорСсылка", Договор);
	Выборка = Запрос.Выполнить().Выбрать();
	Договор_ВидДоговора = неопределено;
	Пока Выборка.Следующий() Цикл 
		Договор_ВидДоговора = Выборка.ВидДоговора;
	КонецЦикла;
	
	Если Договор_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.АбоненскоеОбслуживание Тогда
		Отказ = Истина;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.ВКМ_ПериодДействияДоговораНачало КАК ВКМ_ПериодДействияДоговораНачало,
	               |	ДоговорыКонтрагентов.ВКМ_ПериодДействияДоговораОкончание КАК ВКМ_ПериодДействияДоговораОкончание,
	               |	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК ВКМ_СуммаАбонентскойПлаты,
	               |	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Ссылка = &ДоговорСсылка";
	//Запрос.УстановитьПараметр("ДоговорСсылка", Договор.Ссылка);
	Запрос.УстановитьПараметр("ДоговорСсылка", Договор);
	Выборка = Запрос.Выполнить().Выбрать();
	//ВыборкаТЗ = Запрос.Выполнить().Выгрузить();    
	Договор_ВидДоговора = неопределено;
	Договор_ВКМ_ПериодДействияДоговораНачало = неопределено;
	Договор_ВКМ_ПериодДействияДоговораОкончание = неопределено;
	Договор_ВКМ_СуммаАбонентскойПлаты = 0;
	Договор_ВКМ_СтоимостьЧасаРаботы = 0; 
	Пока Выборка.Следующий() Цикл 
		Договор_ВКМ_ПериодДействияДоговораНачало = Выборка.ВКМ_ПериодДействияДоговораНачало;
		Договор_ВКМ_ПериодДействияДоговораОкончание = Выборка.ВКМ_ПериодДействияДоговораОкончание;
		Договор_ВКМ_СуммаАбонентскойПлаты = Выборка.ВКМ_СуммаАбонентскойПлаты;
		Договор_ВКМ_СтоимостьЧасаРаботы = Выборка.ВКМ_СтоимостьЧасаРаботы; 
	КонецЦикла;
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Или 
		Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда    
		Отказ = Истина;
	КонецЕсли;
	
	//очистит табличную часть.
	Товары.Очистить();
	Услуги.Очистить();
	
	//Если в договоре ненулевая сумма абонентской платы, добавьте в табличную часть
	//строку с номенклатурой из константы НоменклатураАбонентскаяПлата и суммой
	//абонентской платы из договора.
	СуммаАбонентскойПлаты = Договор_ВКМ_СуммаАбонентскойПлаты;
	Если СуммаАбонентскойПлаты >0 Тогда 
		НоваяУслуга = Услуги.Добавить();
		НоваяУслуга.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяУслуга.Количество = 1;      
		НоваяУслуга.Цена = СуммаАбонентскойПлаты;
		НоваяУслуга.Сумма = СуммаАбонентскойПлаты; 
	КонецЕсли;
	
	//Если в месяц даты документа в регистре ВыполненныеКлиентуРаботы есть
	//информация о выполненных работах по этому договору, добавьте в табличную
	//часть строку с номенклатурой из константы НоменклатураРаботыСпециалиста и
	//общим количеством и суммой из регистра ВыполненныеКлиентуРаботы за месяц
	//документа.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.КоличествоЧасовПриход КАК КоличествоЧасовПриход,
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.СуммаКОплатеПриход КАК СуммаКОплатеПриход,
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Клиент КАК Клиент,
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Договор КАК Договор,
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Период КАК Период
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.ОстаткиИОбороты(&ДатаНачало, &ДатаКонец, Месяц, , ) КАК ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты
	               |ГДЕ
	               |	ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Договор = &Договор
	               |	И ВКМ_ВыполненныеКлиентуРаботыОстаткиИОбороты.Клиент = &Контрагент"; 
	
	Запрос.УстановитьПараметр("ДатаНачало", НачалоМесяца(Дата));  
	Запрос.УстановитьПараметр("ДатаКонец", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	//ВыборкаТЗ = Запрос.Выполнить().Выгрузить(); 
	
	Пока Выборка.Следующий() Цикл
		НоваяУслуга = Услуги.Добавить();
		НоваяУслуга.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяУслуга.Количество = Выборка.КоличествоЧасовПриход; 
		НоваяУслуга.Цена = Договор_ВКМ_СтоимостьЧасаРаботы;
		НоваяУслуга.Сумма = Выборка.СуммаКОплатеПриход; 
	КонецЦикла;
	
	//Выбор последнего заказа в пределах действия договора 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЗаказПокупателя.Ссылка КАК ДокументСсылка,
	               |	ЗаказПокупателя.Дата КАК Дата,
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.Услуги.(
	               |		Номенклатура КАК Номенклатура
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Дата МЕЖДУ &ДатаНачало И &ДатаКонец
	               |	И ЗаказПокупателя.Договор = &Договор
	               |	И ЗаказПокупателя.Услуги.Номенклатура = &Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата УБЫВ"; 
	
	Запрос.УстановитьПараметр("ДатаНачало", НачалоМесяца(Договор_ВКМ_ПериодДействияДоговораНачало));  
	Запрос.УстановитьПараметр("ДатаКонец", КонецМесяца(Договор_ВКМ_ПериодДействияДоговораОкончание));
	Запрос.УстановитьПараметр("Договор", Договор);   
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураАбонентскаяПлата);   
	
	Выборка = Запрос.Выполнить().Выбрать();
	//ВыборкаТЗ = Запрос.Выполнить().Выгрузить(); 
	
	//Если нет ни одного введенного документа-основания "Заказ" для абонентской платы в период действия договора.
	Если  Выборка.Количество() = 0 Тогда   
		НовыйЗаказОснвание = Документы.ЗаказПокупателя.СоздатьДокумент();
		НовыйЗаказОснвание.Дата =Договор_ВКМ_ПериодДействияДоговораНачало;
		НовыйЗаказОснвание.Договор=Договор;

		//НовыйЗаказОснвание.Контрагент = Договор.Владелец;
		НовыйЗаказОснвание.Контрагент = Контрагент;
		
		НовыйЗаказОснвание.Организация=Организация; 
			НоваяУслуга = НовыйЗаказОснвание.Услуги.Добавить();
			НоваяУслуга.Номенклатура = НоменклатураАбонентскаяПлата;
			НоваяУслуга.Количество = 1; 
			НоваяУслуга.Цена = Договор_ВКМ_СуммаАбонентскойПлаты;
			НоваяУслуга.Сумма = Договор_ВКМ_СуммаАбонентскойПлаты; 
		НовыйЗаказОснвание.Записать(РежимЗаписиДокумента.Проведение);
		СсылкаНаДокументЗаказ = НовыйЗаказОснвание.Ссылка; 
		Основание =  СсылкаНаДокументЗаказ;
	Иначе  
		Пока Выборка.Следующий() Цикл
			Основание =  Выборка.ДокументСсылка; 
		КонецЦикла;
	КонецЕсли;
	//}
КонецПроцедуры

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
