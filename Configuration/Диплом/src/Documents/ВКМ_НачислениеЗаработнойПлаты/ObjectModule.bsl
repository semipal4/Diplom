#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда 
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ВКМ_ДанныеГрафика.Дата КАК ДанныеГрафикаДата
	              |ИЗ
	              |	РегистрСведений.ВКМ_ДанныеГрафика КАК ВКМ_ДанныеГрафика
	              |ГДЕ
	              |	ВКМ_ДанныеГрафика.Дата >= &ДатаНачалоМесяца
	              |	И ВКМ_ДанныеГрафика.Дата <= &ДатаКонецМесяца";
	
	Запрос.УстановитьПараметр("ДатаНачалоМесяца",НачалоМесяца(Дата));   
	Запрос.УстановитьПараметр("ДатаКонецМесяца",КонецМесяца(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	//ВыборкаТЗ = Запрос.Выполнить().Выгрузить();  
	
	Если Выборка.Количество()>0 тогда
		СформироватьДвижения();
	Иначе
		Отказ = Истина;  
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ("Не заполнен  график (регистр сведений)!");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПоПремии(); //премии  
	СформироватьДвиженияПрочиеОсновныеНачисления(); //отпуск

	РассчитатьОклад();
	РассчитатьОтпуск();  
	Взаиморасчеты();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	//Получаем строки из табличной части документа Начисления
	СтрокиОклада = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда 
		Возврат;  //если окладов нет в документе
	КонецЕсли;

	
	Для Каждого Строка Из Начисления Цикл
		
		//Если ТипЗнч(Строка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда // хотя в форме задано ограничение на поле   
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			ДвижениеОклад = Движения.ВКМ_ОсновныеНачисления.Добавить();
			ДвижениеОклад.ПериодРегистрации = Дата;
				
			ДвижениеОклад.ПериодДействияНачало = Строка.ДатаНачала;
			ДвижениеОклад.ПериодДействияКонец = Строка.ДатаОкончания; 
			ДвижениеОклад.БазовыйПериодНачало = Строка.ДатаНачала;    
			ДвижениеОклад.БазовыйПериодКонец = Строка.ДатаОкончания;  		
				
			ДвижениеОклад.ВидРасчета = Строка.ВидРасчета;
			ДвижениеОклад.Сотрудник = Строка.Сотрудник;
			

		КонецЕсли;
		
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры    

Процедура СформироватьДвиженияПоПремии()  
	
	Запрос = новый Запрос;  
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
	               |	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеПриход КАК СуммаКОплатеПриход
	               |ПОМЕСТИТЬ ВТ_ВыполненыеРаботы
	               |ИЗ
	               |	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	               |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_ДанныеСотрудников
	               |ИЗ
	               |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |			&НачалоПериода,
	               |			Сотрудник В
	               |				(ВЫБРАТЬ
	               |					ВКМ_НачислениеЗаработнойПлатыНачисления.Сотрудник КАК Сотрудник
	               |				ИЗ
	               |					Документ.ВКМ_НачислениеЗаработнойПлаты.Начисления КАК ВКМ_НачислениеЗаработнойПлатыНачисления
	               |				ГДЕ
	               |					ВКМ_НачислениеЗаработнойПлатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВТ_ВыполненыеРаботы.СуммаКОплатеПриход, 0) КАК СуммаКОплатеПриход,
	               |	ЕСТЬNULL(ВТ_ДанныеСотрудников.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	               |	ВТ_ВыполненыеРаботы.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	ВТ_ВыполненыеРаботы КАК ВТ_ВыполненыеРаботы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеСотрудников КАК ВТ_ДанныеСотрудников
	               |		ПО ВТ_ВыполненыеРаботы.Сотрудник = ВТ_ДанныеСотрудников.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи =  РезультатЗапроса.Выбрать();
	//ВыборкаДетальныеЗаписиТЗ=РезультатЗапроса.Выгрузить();    
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДвижениеПремия = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		ДвижениеПремия.ПериодРегистрации = Дата;
		ДвижениеПремия.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияСВыработки;
		ДвижениеПремия.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник; 
		
		ДвижениеПремия.БазовыйПериодНачало = НачалоМесяца(Дата);  
		ДвижениеПремия.БазовыйПериодКонец = КонецМесяца(Дата);    
		
		//Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		ДвижениеПремия.Результат = ВыборкаДетальныеЗаписи.СуммаКОплатеПриход ;  
		ДвижениеПремия.База = ?(ВыборкаДетальныеЗаписи.ПроцентОтРабот=0,0,Окр(ВыборкаДетальныеЗаписи.СуммаКОплатеПриход*100/ВыборкаДетальныеЗаписи.ПроцентОтРабот,2)); 
		ДвижениеПремия.Процент = ВыборкаДетальныеЗаписи.ПроцентОтРабот; 
		
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		
		ДвижениеНДФЛ.БазовыйПериодНачало = ДвижениеПремия.БазовыйПериодНачало;    
		ДвижениеНДФЛ.БазовыйПериодКонец = ДвижениеПремия.БазовыйПериодНачало;  		
		ДвижениеНДФЛ.Результат = Окр(ДвижениеПремия.Результат * 13/100,2);
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сотрудник = ДвижениеПремия.Сотрудник;
		ДвижениеНДФЛ.БазаВидРасчета = ДвижениеПремия.ВидРасчета.Ссылка;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеОсновныеНачисления() // отпуск
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	СтрокиОтпуска = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОтпуска.Количество() = 0 Тогда 
		Возврат;  
	КонецЕсли; 
	
	Для каждого Строка из Начисления Цикл     
		Если ТипЗнч(Строка.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			НачалоОтпуска = Строка.ДатаНачала;
			КонецОтпуска = Строка.ДатаОкончания;
			
			Шаг = 0;   
			
			МесяцНачала = Месяц(НачалоОтпуска);
			МесяцКонца = Месяц(КонецОтпуска);
			ЛетМеждуДатами = Год(КонецОтпуска) - Год(НачалоОтпуска);
			КоличествоМесяцевВОтпуске = ЛетМеждуДатами * 12 - МесяцНачала + МесяцКонца;
			
			Пока Шаг <= КоличествоМесяцевВОтпуске Цикл
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить(); 
				Движение2= Движения.ВКМ_ОтпускаСотрудников.Добавить();
				
				Движение.ПериодРегистрации = Дата;
				Движение.ВидРасчета = Строка.ВидРасчета;
				Движение.Сотрудник = Строка.Сотрудник; 

				Движение2.Период = Дата;
				Движение2.Сотрудник = Строка.Сотрудник; 

					//Движение.ПериодДействияНачало = Строка.ДатаНачала;
					//Движение.ПериодДействияКонец = Строка.ДатаОкончания;
					//Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(строка.ДатаНачала,-12));
					//Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(строка.ДатаОкончания,-1));    
					
					НачалоОтпуска = ?(Шаг = 0, НачалоОтпуска, НачалоМесяца(ДобавитьМесяц(НачалоОтпуска,1)));
					Движение.ПериодДействияНачало = НачалоОтпуска;
					Движение2.НачалоОтпуска = НачалоОтпуска;
					Веха = КонецМесяца(НачалоОтпуска);
					Если Веха <= КонецОтпуска тогда
						Движение.ПериодДействияКонец = Веха;
						Движение2.ОкончаниеОтпуска = Веха;
						Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(НачалоОтпуска,-12));
						Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(КонецМесяца(НачалоОтпуска),-1));    
					Иначе
						Движение.ПериодДействияНачало = НачалоОтпуска;
						Движение2.НачалоОтпуска = НачалоОтпуска;
						Движение.ПериодДействияКонец = КонецОтпуска;
						Движение2.ОкончаниеОтпуска = КонецОтпуска; 
						Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(НачалоОтпуска,-12));
						Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(КонецОтпуска,-1));    
					КонецЕсли; 
					
					РазницаВДнях = (НачалоДня(Движение2.ОкончаниеОтпуска) - НачалоДня(Движение2.НачалоОтпуска)) / (60 * 60 * 24)+1;
				    Движение2.ДнейОтпускаФакт = РазницаВДнях;
					
				Шаг = Шаг + 1;
  			КонецЦикла;
  		КонецЕсли;

	КонецЦикла;
	
    Движения.ВКМ_ОсновныеНачисления.Записать();
    Движения.ВКМ_ОтпускаСотрудников.Записать();


КонецПроцедуры   	

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодРегистрации КАК ПериодРегистрации
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&Период,
	               |				Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |					ГДЕ
	               |						ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |						И ВКМ_ОсновныеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад))) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	//ВыборкаТЗ = Запрос.Выполнить().Выгрузить();

	
	Пока Выборка.Следующий() Цикл
		
		ДвижениеОклад = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.План = 0 Тогда
			ДвижениеОклад.Результат = 0;
		Иначе
			ДвижениеОклад.Результат = Выборка.Оклад * Выборка.Факт / Выборка.План;
			
			ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
			ДвижениеНДФЛ.ПериодРегистрации = Выборка.ПериодРегистрации;
				
			ДвижениеНДФЛ.БазовыйПериодНачало = ДвижениеОклад.ПериодДействияНачало;    
			ДвижениеНДФЛ.БазовыйПериодКонец = ДвижениеОклад.ПериодДействияКонец;  		
			ДвижениеНДФЛ.Результат = Окр(ДвижениеОклад.Результат * 13/100,2);	
			ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			ДвижениеНДФЛ.Сотрудник = ДвижениеОклад.Сотрудник;
			ДвижениеНДФЛ.БазаВидРасчета = ДвижениеОклад.ВидРасчета.Ссылка;

		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура РассчитатьОтпуск() 

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеБазовыйПериод, 0) КАК План,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало КАК ПериодДействияНачало,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец КАК ПериодДействияКонец
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	               |		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения); 
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи =  РезультатЗапроса.Выбрать();  
	//ВыборкаДетальныеЗаписиТЗ =  РезультатЗапроса.Выгрузить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1] ;
		
		Если ВыборкаДетальныеЗаписи.Факт = 0 тогда  
			Движение.Результат = 0;
			Продолжить;
		КонецЕсли;
		
		КоличествоДнейОтпуска = (НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияКонец) - НачалоДня(ВыборкаДетальныеЗаписи.ПериодДействияНачало)) / (60 * 60 * 24)+1;
		
		Движение.Результат = (ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп) * КоличествоДнейОтпуска/ВыборкаДетальныеЗаписи.План;

		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Движение.ПериодРегистрации;
		ДвижениеНДФЛ.БазовыйПериодНачало = Движение.ПериодДействияНачало;    
		ДвижениеНДФЛ.БазовыйПериодКонец = Движение.ПериодДействияКонец;  		
		ДвижениеНДФЛ.Результат = Окр(Движение.Результат * 13/100,2);	
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сотрудник = Движение.Сотрудник;
		ДвижениеНДФЛ.БазаВидРасчета = Движение.ВидРасчета.Ссылка;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры 

Процедура Взаиморасчеты() 

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_ДополнительныеНачисления.Сотрудник
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_Удержания.Сотрудник
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаСотрудникиТЗ =  Запрос.Выполнить().Выгрузить(); 

	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_Удержания.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_Удержания.Результат) КАК Удержания
	               |ПОМЕСТИТЬ ВТ_Удержания
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_Удержания.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_ОснНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК Результат
	               |ПОМЕСТИТЬ ВТ_ДопНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	               |ГДЕ
	               |	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ДополнительныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВыборкаСотрудники.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_Сотрудники
	               |ИЗ
	               |	&ВыборкаСотрудники КАК ВыборкаСотрудники
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Удержания.Сотрудник КАК Сотрудник,
	               |	ЕСТЬNULL(ВТ_Удержания.Удержания, 0) КАК Удержания,
	               |	ЕСТЬNULL(ВТ_ОснНачисления.Результат, 0) КАК ОснНачисления,
	               |	ЕСТЬNULL(ВТ_ДопНачисления.Результат, 0) КАК ДопНачисления
	               |ИЗ
	               |	ВТ_Сотрудники КАК ВТ_Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	               |		ПО ВТ_Сотрудники.Сотрудник = ВТ_Удержания.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОснНачисления КАК ВТ_ОснНачисления
	               |		ПО ВТ_Сотрудники.Сотрудник = ВТ_ОснНачисления.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
	               |		ПО ВТ_Сотрудники.Сотрудник = ВТ_ДопНачисления.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВыборкаСотрудники", ВыборкаСотрудникиТЗ);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи =  РезультатЗапроса.Выбрать();  
	//ВыборкаДетальныеЗаписиТЗ =  РезультатЗапроса.Выгрузить();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;   
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Сумма = ВыборкаДетальныеЗаписи.ОснНачисления + ВыборкаДетальныеЗаписи.ДопНачисления - ВыборкаДетальныеЗаписи.Удержания;
		Движение.Период = Дата;
		Движение.Регистратор = Ссылка;
	КонецЦикла;
	
КонецПроцедуры 

#КонецОбласти

#КонецЕсли

   