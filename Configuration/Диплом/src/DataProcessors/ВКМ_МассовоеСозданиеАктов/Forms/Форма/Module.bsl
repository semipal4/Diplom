
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	Объект.Период.ДатаНачала = НачалоМесяца(ТекущаяДатаСеанса());  
	Объект.Период.ДатаОкончания = КонецМесяца(ТекущаяДатаСеанса());
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.СписокАктов.Очистить();
	Если Месяц(Объект.Период.ДатаНачала) <> Месяц(Объект.Период.ДатаОкончания) Тогда
		Объект.Период.ДатаОкончания = КонецМесяца(Объект.Период.ДатаНачала);
		//НовоеСообщение = Новый СообщениеПользователю;
		//НовоеСообщение.Поле = "Период"; 
		//НовоеСообщение.Текст = "В поле периода нужно выбирать период МЕСЯЦ";
		//НовоеСообщение.Сообщить();
		ОбщегоНазначенияКлиент.СообщитьПользователю("В поле периода нужно выбирать период МЕСЯЦ");
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверкаАктов(Команда)   
	АдресТЗ = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор); 
	Объект.СписокДоговоровБезАкта.Очистить();
	ПроверкаАктовНаСервере(АдресТЗ);
	//Объект.РеквизитАдресТЗ = АдресТЗ;
КонецПроцедуры 

&НаКлиенте
Процедура ФормироватеАктов(Команда)  
    АдресТЗ = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	Объект.СписокДоговоровБезАкта.Очистить();
	ПолучитьМассивДоговоровБезАктов(АдресТЗ);
	Если Объект.СписокДоговоровБезАкта.Количество() >0 Тогда
		ФормированиеАктовНаСервере(АдресТЗ);  
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции 

#Область ОбработчикиСобытийПроверкиАктов 

&НаКлиенте	
Процедура ПроверкаАктовНаСервере(АдресТЗ)
	ДлительнаяОперация = ПроверкаАктовНаСервереДлительнаяОперация(АдресТЗ);
	ПарамтерыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);//ЭтотОбъект - эта форма
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("АдресТЗ", АдресТЗ); 
	ФункцияВыполнения = Новый ОписаниеОповещения("СтатусВыполненияФукнции", ЭтотОбъект, ДопПараметры);//здесь м.б. ДополнительныеПараметры, котоыре мы м. передавать или не передавать
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,ФункцияВыполнения,ПарамтерыОжидания);
КонецПроцедуры

&НаСервере 
функция ПроверкаАктовНаСервереДлительнаяОперация(АдресТЗ)
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор); //ИД формы (УникальныйИдентификатор)
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,"Обработки.ВКМ_МассовоеСозданиеАктов.ПроверкаАктовДлитльнаяОперация", Объект.Период, АдресТЗ, 0);
	Возврат ДлительнаяОперация;
КонецФункции

//&НаКлиенте	
//Процедура СтатусВыполненияФукнцииПроверка(Результат, ДополнительныеПараметры) экспорт
//	Если Результат = Неопределено Тогда 
//		Возврат ;
//	КонецЕсли;
//	Если Результат.Статус = "Ошибка" тогда 
//		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
//		Возврат;
//	КонецЕсли;
//	ЗначениеФункции = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
//	ОбщегоНазначенияКлиент.СообщитьПользователю(ЗначениеФункции);
//	АдресТЗ_ = ДополнительныеПараметры.АдресТЗ;
//	ОтобразитьТЗ(АдресТЗ_);
//КонецПроцедуры 

//&НаСервере
//Процедура ОтобразитьТЗ (АдресТЗ_)
//		ТЗ = ПолучитьИзВременногоХранилища(АдресТЗ_);
//		Объект.СписокАктов.Очистить();
//		Объект.СписокАктов.Загрузить(ТЗ);
//		УдалитьИзВременногоХранилища(АдресТЗ_);
//КонецПроцедуры  

	
#КонецОбласти
//----------------------------------------------------------------------------------
#Область ОбработчикиСобытийСозданиеАктов 

&НаСервере
Процедура ПолучитьМассивДоговоровБезАктов(АдресТЗ)
	МассивДоговоровБезАктов = Новый Массив;
	Отбор = Новый Структура();
	Отбор.Вставить("ДокументСсылка", Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	МассивДоговоровБезАктов = Объект.СписокАктов.НайтиСтроки(Отбор);
	
	Если МассивДоговоровБезАктов.Количество() > 0 Тогда
		Для Каждого Элемент из МассивДоговоровБезАктов Цикл    
			Объект.СписокДоговоровБезАкта.Добавить(Элемент.Договор);
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте	
Процедура ФормированиеАктовНаСервере(АдресТЗ)
	ДлительнаяОперация = ФормироватеАктовНаСервереДлительнаяОперация(АдресТЗ);
	ПарамтерыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);//ЭтотОбъект - эта форма
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("АдресТЗ", АдресТЗ);
	ФункцияВыполнения = Новый ОписаниеОповещения("СтатусВыполненияФукнции", ЭтотОбъект, ДопПараметры);//здесь м.б. ДополнительныеПараметры, котоыре мы м. передавать или не передавать
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,ФункцияВыполнения,ПарамтерыОжидания);
КонецПроцедуры

&НаСервере 
функция ФормироватеАктовНаСервереДлительнаяОперация(АдресТЗ) 
	МассивДоговоровБезАктов = Объект.СписокДоговоровБезАкта.ВыгрузитьЗначения();
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор); //ИД формы (УникальныйИдентификатор)
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,"Обработки.ВКМ_МассовоеСозданиеАктов.ФормированиеАктовДлитльнаяОперация", Объект.Период, АдресТЗ, МассивДоговоровБезАктов);
	Возврат ДлительнаяОперация;
КонецФункции 

#КонецОбласти
//----------------------------------------------------------------------------------
#Область ОбработчикиОбщихСобытий

&НаКлиенте	
Процедура СтатусВыполненияФукнции(Результат, ДополнительныеПараметры) экспорт
	// Статус выполнения фукнции
	
	Если Результат = Неопределено Тогда 
		Возврат ;
	КонецЕсли;
	Если Результат.Статус = "Ошибка" тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	ЗначениеФункции = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ОбщегоНазначенияКлиент.СообщитьПользователю(ЗначениеФункции);
	АдресТЗ_ = ДополнительныеПараметры.АдресТЗ;
	ОтобразитьТЗ(АдресТЗ_);
КонецПроцедуры 

&НаСервере
Процедура ОтобразитьТЗ(АдресТЗ_)
		ТЗ_ = ПолучитьИзВременногоХранилища(АдресТЗ_);
		Объект.СписокАктов.Очистить();
		Объект.СписокАктов.Загрузить(ТЗ_);
		УдалитьИзВременногоХранилища(АдресТЗ_);
КонецПроцедуры  

#КонецОбласти 

#КонецОбласти

 

